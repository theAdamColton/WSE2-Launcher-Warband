<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="closeButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>